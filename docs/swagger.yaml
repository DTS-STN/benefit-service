basePath: /
definitions:
  bindings.BenefitApplyRequest:
    properties:
      benefitType:
        type: string
      incomeDetails:
        type: string
      outOfWork:
        type: string
      reasonForSeperation:
        type: string
      regularLookingForWork:
        type: string
    type: object
  bindings.BenefitEligibilityRequest:
    properties:
      ableToWork:
        type: string
      gender:
        type: string
      incomeDetails:
        type: string
      reasonForOutOfWork:
        type: string
      timeOutOfWork:
        type: string
    type: object
  models.Benefits:
    properties:
      api_url:
        type: string
      benefit_key:
        type: string
      benefit_tags:
        items:
          type: string
        type: array
      benefit_type:
        type: string
      description:
        type: string
      id:
        type: integer
      long_description:
        type: string
      redirect_url:
        type: string
      related_benefits:
        items:
          type: string
        type: array
      service_type:
        type: string
      title:
        type: string
    type: object
  models.Error:
    properties:
      errorMessage:
        type: string
      status:
        type: integer
    type: object
  models.Question:
    properties:
      answers:
        items:
          $ref: '#/definitions/models.QuestionAnswers'
        type: array
      id:
        type: integer
      text:
        type: string
    type: object
  models.QuestionAnswers:
    properties:
      id:
        type: string
      text:
        type: string
    type: object
  renderings.BenefitServiceError:
    properties:
      error_code:
        type: string
    type: object
  renderings.BenefitsResponse:
    properties:
      benefit:
        $ref: '#/definitions/models.Benefits'
      benefits:
        description: Life Journey ID
        items:
          $ref: '#/definitions/models.Benefits'
        type: array
    type: object
  renderings.QuestionResponse:
    properties:
      question:
        $ref: '#/definitions/models.Question'
      questions:
        items:
          $ref: '#/definitions/models.Question'
        type: array
    type: object
host: https://benefit-service-dev.dev.dts-stn.com
info:
  contact: {}
  description: This service returns information about Benefits
  title: Benefit Service
  version: "1.0"
paths:
  /benefits:
    get:
      consumes:
      - application/json
      operationId: benefits
      parameters:
      - description: The language the response should be in. Defaults to English.
          English and French supported.
        in: query
        name: lang
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/renderings.BenefitsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/renderings.BenefitServiceError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/renderings.BenefitServiceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/renderings.BenefitServiceError'
      summary: Request Info on Benefits
  /benefits/apply:
    post:
      consumes:
      - application/json
      operationId: benefits-apply
      parameters:
      - description: the benefit you are requesting an apply redirect for
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/bindings.BenefitApplyRequest'
      - description: the bearer token for a particular user
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "307":
          description: Temporary Redirect
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - OAuth2AccessCode: []
      summary: Request redirect url to IEG for a particular benefit
  /benefits/eligible:
    post:
      consumes:
      - application/json
      operationId: benefits-eligible
      parameters:
      - description: The answers to the questions that determine benefit eligibility
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/bindings.BenefitEligibilityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: integer
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Request ids of eligible benefits
  /healthcheck:
    get:
      description: Returns Healthy
      operationId: healthcheck
      responses:
        "200":
          description: Healthy
          schema:
            type: string
      summary: Returns Healthy
  /questions:
    get:
      consumes:
      - application/json
      operationId: questions
      parameters:
      - description: The language the response should be in. Defaults to English.
          English and French supported.
        in: query
        name: lang
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/renderings.QuestionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/renderings.BenefitServiceError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/renderings.BenefitServiceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/renderings.BenefitServiceError'
      summary: Get a list of questions for pre-screening eligibilty
swagger: "2.0"
